plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.library") version "3.6.3"
    id 'maven-publish'
    id 'signing'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
//     id('io.github.gradle-nexus.publish-plugin') version '1.1.0'
}

group = 'io.github.oss-slu'
version = 'v1.0.0'

apply plugin: 'maven-publish'
//apply plugin: 'io.github.gradle-nexus.publish-plugin'

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-validation")
    implementation files("libs/crowpi.jar", "libs/components.jar")
    api 'com.pi4j:pi4j-core:2.2.1'
    api 'com.pi4j:pi4j-plugin-raspberrypi:2.2.1'
    api 'com.pi4j:pi4j-plugin-pigpio:2.2.1'
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
    withJavadocJar()
    withSourcesJar()
}



asciidoctor {
    attributes 'stylesheet': "style.css"
    baseDirFollowsSourceDir()
    resources {
        from(sourceDir) {
            include 'img/**'
        }
    }
}

/*
nexusPublishing{
    repositories {
        sonatype{
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))

            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}
*/
ext.genOutputDir = file("$buildDir/generated-resources")

task generateVersionTxt()  {
    ext.outputFile = file("$genOutputDir/version.txt")
    outputs.file(outputFile)
    doLast {
        outputFile.text = """GroupId: ${project.group}
Name: ${project.name}
Version: $version
Build-time: ${java.time.LocalDateTime.now()}
"""
    }
}

sourceSets.main.output.dir genOutputDir, builtBy: generateVersionTxt

publishing{
    publications{
        mavenJava(MavenPublication){
            from(components.java)
            pom{
                name = 'publish-java'
                description = 'A Micronaut based library built to simplify using Micronaut with Raspberry Pi and external hardware components'
                url="https://github.com/oss-slu/Pi4Micronaut"
                licenses{
                    license{
                        name= 'The Apache Licence, Version 2.0'
                        url= 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers{
                    developer{
                        id = 'MurrayG'
                        name = 'Greih Murray'
                    }
                    developer{
                        id = 'TraisonD'
                        name = 'Traison Diedrich'
                    }
                    developer{
                        id = 'AustinH'
                        name = 'Austin Howard'
                    }
                    developer{
                        id = 'SinuoL'
                        name = 'Sinuo Liu'
                    }
                }

                scm{
                    url = 'https://github.com/oss-slu/Pi4Micronaut'
                    connection =  'scm:https://github.com/oss-slu/Pi4Micronaut.git'
                    developerConnection = 'scm:https://github.com/oss-slu/Pi4Micronaut.git'
                }
            }
        }
    }
}

signing{
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
